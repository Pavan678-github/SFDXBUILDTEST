trigger:
- none


pool:
  vmImage: 'ubuntu-latest'



steps:
- script: |
    npm install sfdx-cli --location=global
    sfdx plugins --core
    sfdx --version
   #install sfdx-cli
   # wget -qO- ${DX_CLI_URL_CUSTOM-$CLIURL} | tar xJ -C ~/sfdx --strip-components 1
    #export PATH=~/sfdx/bin:$PATH
   # sfdx --version
    #sfdx plugins --core


- script: |    
    echo "Storing auth URL"
    echo $(CICDDEVINT_BASE_PACKAGE_AUTH_URL) > auth.txt
    sfdx force:auth:sfdxurl:store -f auth.txt -a devhub --set-default-dev-hub
    rm -rf file.txt
  displayName: Authenticating with dev hub

#- script: |
    #sfdx force:org:create orgName=testorg --definitionfile config/project-scratch-def.json -a dev1 --setdefaultdevhubusername
  #displayName: Scratchorg creation 
- script: |     
    echo "Printing the directort content"
    ls -l
    echo "Printing current directory path"
    pwd
    echo "Creating scratch org"
    #sfdx force:org:create orgName=CICDOrg -f config/project-scratch-def.json -w 120 -n --durationdays 1 -a CICDOrg -s username=user$(Build.buildid)@example.com
  displayName: Creating scratch org

- script: |
    echo "password creation"
    #sfdx force:user:password:generate -u user$(Build.buildid)@example.com
  displayName: Creating Password


- script: |          
    echo "pulling source code"
    #sfdx force:source:push --targetusername user$(Build.buildid)@example.com
    #sfdx force:source:pull -u testlatest123@example.com
  displayName: push source code

- script: |
    sfdx org:list
  displayName: org list 

- script: |
      echo "Deleting scratch org"
      #sfdx org:delete:scratch -o CICDOrg -p
  #displayName: Deleting the scratch org

